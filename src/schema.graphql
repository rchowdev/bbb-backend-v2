type Query {
    user(id: ID!): User!
    users(query: String): [User!]!
    book(id: ID!): Book!
    books(query: String): [Book!]!
}

type Mutation {
    createUser(data: CreateUserInput!): AuthPayload!
    createBook(data: CreateBookInput!): Book!
    login(data: LoginUserInput!): AuthPayload!
}

input CreateUserInput {
    name: String!
    email: String!
    password: String!
}

input CreateBookInput {
    title: String!
    author: String!
    user: ID!
}

input LoginUserInput {
    email: String!
    password: String!
}

type User {
    id: ID!
    name: String!
    email: String!
    password: String!
    books: [Book!]
}

type Book {
    id: ID!
    title: String!
    author: String!
    users: [User!] 
}

type AuthPayload {
    token: String!
    user: User!
}